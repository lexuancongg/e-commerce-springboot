server:
  port: 8000
spring:
  application:
    name: api-gateway
  threads:
    virtual:
      enabled: true
  cloud:
    gateway:
      default-filters:
#   req kèm theo cookie chứa sessionId => tìm kiếm WebSession trên Gateway. => trong session chứa SecurityContext (user info + token).
#   => lưu lại => để tokenRelay có thể lấy token
        - SaveSession
      routes:
        - id: api
#          url đươợc forward toiyy
        - uri: http://nginx
#          điều kiện path api phải khớp
        - predicates:
          - Path=/api/**
#          các bộ lọc áp duụng lên truocs khi forward
        - filters:
#          lấy token trong session để chuyến tiếp theo req khi được forward
          - TokenRelay=
          - StripPrefix=1
          - DedupeResponseHeader=Origin Access-Control-Request-Method Access-Control-Request-Headers

# lưu session trong redis thay vì mặc định trong memory
  data:
    redis:
      host: redis
      port: 6379
  session:
    store-type: redis



  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri:  http://keycloak/realms/ecommerce
        registration:
          ecommerce:
            provider: keycloak
            client-id: xuancong-ecommerce
            client-secret: ewnxcHBHo3mKveUS6Fq0DmunI6vQiSXA
            redirect-uri: http://api-gateway:8000/login/oauth2/code/ecommerce
            scope: openid, roles
management:
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}



